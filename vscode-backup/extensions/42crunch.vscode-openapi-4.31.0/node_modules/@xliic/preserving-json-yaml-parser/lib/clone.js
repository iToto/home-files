"use strict";
/*
 Copyright (c) 42Crunch Ltd. All rights reserved.
 Licensed under the GNU Affero General Public License version 3. See LICENSE.txt in the project root for license information.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.simpleClone = void 0;
const object_1 = require("./visit/object");
const preserve_1 = require("./preserve");
function simpleClone(orig, replacer) {
    let container = {};
    let location = [];
    const stack = [container];
    (0, object_1.visitObject)(undefined, "fakeroot", orig, {
        onObjectStart: (parent, key, value) => {
            location.push(key);
            stack.push(container);
            container = container[key] = {};
            (0, preserve_1.copyPreservedValues)(value, container);
        },
        onObjectEnd: () => {
            location.pop();
            container = stack.pop();
        },
        onArrayStart: (parent, key, value) => {
            location.push(key);
            stack.push(container);
            container = container[key] = [];
            (0, preserve_1.copyPreservedValues)(value, container);
        },
        onArrayEnd: () => {
            location.pop();
            container = stack.pop();
        },
        onValue: (parent, key, value, preserved) => {
            container[key] = replacer ? replacer(value, [...location.slice(1), key]) : value;
        },
    });
    return stack[0].fakeroot;
}
exports.simpleClone = simpleClone;
